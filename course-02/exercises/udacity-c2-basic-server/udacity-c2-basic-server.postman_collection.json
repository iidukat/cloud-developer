{
	"info": {
		"_postman_id": "1b1cdc3d-9250-4d97-99ee-83a4c8a9e4df",
		"name": "udacity-c2-basic-server",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32076246"
	},
	"item": [
		{
			"name": "exercise",
			"item": [
				{
					"name": "/cars all",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.json()).to.deep.equal(",
									"        [",
									"            {",
									"                \"make\": \"tesla\",",
									"                \"type\": \"sedan\",",
									"                \"model\": \"roadster\",",
									"                \"cost\": 33,",
									"                \"id\": 0",
									"            },",
									"            {",
									"                \"make\": \"tesla\",",
									"                \"type\": \"suv\",",
									"                \"model\": \"model 3\",",
									"                \"cost\": 48,",
									"                \"id\": 1",
									"            },",
									"            {",
									"                \"make\": \"toyota\",",
									"                \"type\": \"sedan\",",
									"                \"model\": \"prius\",",
									"                \"cost\": 22,",
									"                \"id\": 2",
									"            },",
									"            {",
									"                \"make\": \"honda\",",
									"                \"type\": \"sedan\",",
									"                \"model\": \"civic\",",
									"                \"cost\": 22,",
									"                \"id\": 3",
									"            }",
									"        ]",
									"    );",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8082/cars/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"cars",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "/cars filter",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.json()).to.deep.equal(",
									"        [",
									"            {",
									"                \"make\": \"toyota\",",
									"                \"type\": \"sedan\",",
									"                \"model\": \"prius\",",
									"                \"cost\": 22,",
									"                \"id\": 2",
									"            }",
									"        ]",
									"    );",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8082/cars/?make=toyota",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"cars",
								""
							],
							"query": [
								{
									"key": "make",
									"value": "toyota"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/cars by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.json()).to.deep.equal(",
									"        {",
									"            \"make\": \"toyota\",",
									"            \"type\": \"sedan\",",
									"            \"model\": \"prius\",",
									"            \"cost\": 22,",
									"            \"id\": 2",
									"        }",
									"    );",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8082/cars/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"cars",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "/cars",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Body matches json\", function () {",
									"    pm.expect(pm.response.json()).to.deep.equal(",
									"        {",
									"            \"make\": \"ford\",",
									"            \"type\": \"sedan\",",
									"            \"model\": \"focus\",",
									"            \"cost\": 12,",
									"            \"id\": 9",
									"        }",
									"    );",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"make\": \"ford\", \"type\": \"sedan\", \"model\": \"focus\", \"cost\": 12, \"id\": 9 }\n"
						},
						"url": {
							"raw": "http://localhost:8082/cars",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"cars"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "http://localhost:8082/",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Welcome to the Cloud!\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8082/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8082",
					"path": [
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "http://localhost:8082/persons/george",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(`Welcome to the Cloud, george!`);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8082/persons/:name",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8082",
					"path": [
						"persons",
						":name"
					],
					"variable": [
						{
							"key": "name",
							"value": "george"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "http://localhost:8082/persons/:name Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Body matches string\", function () {",
							"    var query = {};",
							"    pm.request.url.query.all().forEach((p) => { query[p.key] = p.value});",
							"    ",
							"    pm.expect(pm.response.text()).to.include(`Welcome to the Cloud, ${query['name']}!`);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8082/persons?name=george",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8082",
					"path": [
						"persons"
					],
					"query": [
						{
							"key": "name",
							"value": "george"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "http://localhost:8082/persons/",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(`Welcome to the Cloud, james!`);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"james\"\n}"
				},
				"url": {
					"raw": "http://localhost:8082/persons",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8082",
					"path": [
						"persons"
					]
				}
			},
			"response": []
		},
		{
			"name": "400 http://localhost:8082/persons/:name",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8082/persons/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8082",
					"path": [
						"persons",
						""
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "endpoint",
			"value": "http://localhost:8082",
			"type": "string"
		}
	]
}